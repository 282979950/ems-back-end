<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdmh.entity.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="com.tdmh.entity.Employee">
        <constructor>
            <idArg column="emp_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="emp_number" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_org_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="emp_district_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="emp_login_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_email" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_mobile" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="emp_management_dist_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_login_ip" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_login_date" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="emp_login_flag" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="create_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="usable" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="remarks" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        emp_id, emp_number, emp_name, emp_org_id, emp_district_id, emp_login_name, emp_password,
        emp_email, emp_phone, emp_mobile, emp_address, emp_type, emp_management_dist_id,
        emp_login_ip, emp_login_date, emp_login_flag, create_time, create_by, update_time,
        update_by, usable, remarks
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from employee
        where emp_id = #{empId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from employee
        where emp_id = #{empId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.tdmh.entity.Employee">
        insert into employee (emp_id, emp_number, emp_name,
        emp_org_id, emp_district_id, emp_login_name,
        emp_password, emp_email, emp_phone,
        emp_mobile, emp_address, emp_type,
        emp_management_dist_id, emp_login_ip, emp_login_date,
        emp_login_flag, create_time, create_by,
        update_time, update_by, usable,
        remarks)
        values (#{empId,jdbcType=INTEGER}, #{empNumber,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR},
        #{empOrgId,jdbcType=INTEGER}, #{empDistrictId,jdbcType=INTEGER}, #{empLoginName,jdbcType=VARCHAR},
        #{empPassword,jdbcType=VARCHAR}, #{empEmail,jdbcType=VARCHAR}, #{empPhone,jdbcType=VARCHAR},
        #{empMobile,jdbcType=VARCHAR}, #{empAddress,jdbcType=VARCHAR}, #{empType,jdbcType=VARCHAR},
        #{empManagementDistId,jdbcType=VARCHAR}, #{empLoginIp,jdbcType=VARCHAR}, #{empLoginDate,jdbcType=TIMESTAMP},
        #{empLoginFlag,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER},
        #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, #{usable,jdbcType=BIT},
        #{remarks,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.tdmh.entity.Employee">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="empId != null">
                emp_id,
            </if>
            <if test="empNumber != null">
                emp_number,
            </if>
            <if test="empName != null">
                emp_name,
            </if>
            <if test="empOrgId != null">
                emp_org_id,
            </if>
            <if test="empDistrictId != null">
                emp_district_id,
            </if>
            <if test="empLoginName != null">
                emp_login_name,
            </if>
            <if test="empPassword != null">
                emp_password,
            </if>
            <if test="empEmail != null">
                emp_email,
            </if>
            <if test="empPhone != null">
                emp_phone,
            </if>
            <if test="empMobile != null">
                emp_mobile,
            </if>
            <if test="empAddress != null">
                emp_address,
            </if>
            <if test="empType != null">
                emp_type,
            </if>
            <if test="empManagementDistId != null">
                emp_management_dist_id,
            </if>
            <if test="empLoginIp != null">
                emp_login_ip,
            </if>
            <if test="empLoginDate != null">
                emp_login_date,
            </if>
            <if test="empLoginFlag != null">
                emp_login_flag,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="usable != null">
                usable,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="empId != null">
                #{empId,jdbcType=INTEGER},
            </if>
            <if test="empNumber != null">
                #{empNumber,jdbcType=VARCHAR},
            </if>
            <if test="empName != null">
                #{empName,jdbcType=VARCHAR},
            </if>
            <if test="empOrgId != null">
                #{empOrgId,jdbcType=INTEGER},
            </if>
            <if test="empDistrictId != null">
                #{empDistrictId,jdbcType=INTEGER},
            </if>
            <if test="empLoginName != null">
                #{empLoginName,jdbcType=VARCHAR},
            </if>
            <if test="empPassword != null">
                #{empPassword,jdbcType=VARCHAR},
            </if>
            <if test="empEmail != null">
                #{empEmail,jdbcType=VARCHAR},
            </if>
            <if test="empPhone != null">
                #{empPhone,jdbcType=VARCHAR},
            </if>
            <if test="empMobile != null">
                #{empMobile,jdbcType=VARCHAR},
            </if>
            <if test="empAddress != null">
                #{empAddress,jdbcType=VARCHAR},
            </if>
            <if test="empType != null">
                #{empType,jdbcType=VARCHAR},
            </if>
            <if test="empManagementDistId != null">
                #{empManagementDistId,jdbcType=VARCHAR},
            </if>
            <if test="empLoginIp != null">
                #{empLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="empLoginDate != null">
                #{empLoginDate,jdbcType=TIMESTAMP},
            </if>
            <if test="empLoginFlag != null">
                #{empLoginFlag,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                NOW(),
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                NOW(),
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="usable != null">
                #{usable,jdbcType=BIT},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tdmh.entity.Employee">
        update employee
        <set>
            <if test="empNumber != null">
                emp_number = #{empNumber,jdbcType=VARCHAR},
            </if>
            <if test="empName != null">
                emp_name = #{empName,jdbcType=VARCHAR},
            </if>
            <if test="empOrgId != null">
                emp_org_id = #{empOrgId,jdbcType=INTEGER},
            </if>
            <if test="empDistrictId != null">
                emp_district_id = #{empDistrictId,jdbcType=INTEGER},
            </if>
            <if test="empLoginName != null">
                emp_login_name = #{empLoginName,jdbcType=VARCHAR},
            </if>
            <if test="empPassword != null">
                emp_password = #{empPassword,jdbcType=VARCHAR},
            </if>
            <if test="empEmail != null">
                emp_email = #{empEmail,jdbcType=VARCHAR},
            </if>
            <if test="empPhone != null">
                emp_phone = #{empPhone,jdbcType=VARCHAR},
            </if>
            <if test="empMobile != null">
                emp_mobile = #{empMobile,jdbcType=VARCHAR},
            </if>
            <if test="empAddress != null">
                emp_address = #{empAddress,jdbcType=VARCHAR},
            </if>
            <if test="empType != null">
                emp_type = #{empType,jdbcType=INTEGER},
            </if>
            <if test="empManagementDistId != null">
                emp_management_dist_id = #{empManagementDistId,jdbcType=VARCHAR},
            </if>
            <if test="empLoginIp != null">
                emp_login_ip = #{empLoginIp,jdbcType=VARCHAR},
            </if>
            <if test="empLoginDate != null">
                emp_login_date = #{empLoginDate,jdbcType=TIMESTAMP},
            </if>
            <if test="empLoginFlag != null">
                emp_login_flag = #{empLoginFlag,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="usable != null">
                usable = #{usable,jdbcType=BIT},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where emp_id = #{empId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tdmh.entity.Employee">
        update employee
        set
        emp_number = #{empNumber,jdbcType=VARCHAR},
        emp_name = #{empName,jdbcType=VARCHAR},
        emp_org_id = #{empOrgId,jdbcType=INTEGER},
        emp_district_id = #{empDistrictId,jdbcType=INTEGER},
        emp_login_name = #{empLoginName,jdbcType=VARCHAR},
        emp_password = #{empPassword,jdbcType=VARCHAR},
        emp_email = #{empEmail,jdbcType=VARCHAR},
        emp_phone = #{empPhone,jdbcType=VARCHAR},
        emp_mobile = #{empMobile,jdbcType=VARCHAR},
        emp_address = #{empAddress,jdbcType=VARCHAR},
        emp_type = #{empType,jdbcType=INTEGER},
        emp_management_dist_id = #{empManagementDistId,jdbcType=VARCHAR},
        emp_login_ip = #{empLoginIp,jdbcType=VARCHAR},
        emp_login_date = #{empLoginDate,jdbcType=TIMESTAMP},
        emp_login_flag = #{empLoginFlag,jdbcType=BIT},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_by = #{createBy,jdbcType=INTEGER},
        update_time = NOW(),
        update_by = #{updateBy,jdbcType=INTEGER},
        usable = #{usable,jdbcType=BIT},
        remarks = #{remarks,jdbcType=VARCHAR}
        where emp_id = #{empId,jdbcType=INTEGER}
    </update>
    <select id="checkEmpLoginName" resultType="boolean" parameterType="java.lang.String">
        SELECT
        COUNT(1)
        FROM employee
        WHERE emp_login_name = #{empLoginName} AND usable = 1
    </select>
    <select id="selectEmpLogin" resultMap="BaseResultMap" parameterType="map">
        select
        <include refid="Base_Column_List"/>
        from employee
        where emp_login_name = #{empLoginName} and emp_password = #{empPassword} and usable = 1
    </select>
    <!--<select id="getEmpByLoginName" resultMap="BaseResultMap" parameterType="string">-->
    <!--select-->
    <!--<include refid="Base_Column_List"/>-->
    <!--from employee-->
    <!--where emp_login_name = #{empLoginName,jdbcType=VARCHAR} and usable = 1-->
    <!--</select>-->
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM employee
        WHERE usable = 1
    </select>
    <select id="select" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List"/>
        FROM employee
        WHERE usable = 1
        <if test="empNumber != null and empNumber != ''">
            AND emp_number LIKE CONCAT('%', #{empNumber,jdbcType=VARCHAR}, '%')
        </if>
        <if test="empName != null and empName != ''">
            AND emp_name LIKE CONCAT('%', #{empName,jdbcType=VARCHAR}, '%')
        </if>
        <if test="empOrgId != null and empOrgId != ''">
            AND emp_org_id LIKE CONCAT('%', #{empOrgId,jdbcType=INTEGER}, '%')
        </if>
        <if test="empDistrictId != null and empDistrictId != ''">
            AND emp_district_id LIKE CONCAT('%', #{empDistrictId,jdbcType=INTEGER}, '%')
        </if>
        <if test="empLoginName != null and empLoginName != ''">
            AND emp_login_name LIKE CONCAT('%', #{empLoginName,jdbcType=VARCHAR}, '%')
        </if>
        <if test="empPhone != null and empPhone != ''">
            AND emp_phone LIKE CONCAT('%', #{empPhone,jdbcType=VARCHAR}, '%')
        </if>
        <if test="empMobile != null and empMobile != ''">
            AND emp_mobile LIKE CONCAT('%', #{empMobile,jdbcType=VARCHAR}, '%')
        </if>
        <if test="empType != null and empType != ''">
            AND emp_type LIKE CONCAT('%', #{empType,jdbcType=INTEGER}, '%')
        </if>
        ORDER BY emp_id
    </select>
    <select id="getCountWithUnusable" resultType="int">
        select
        COUNT(1)
        from employee
    </select>
    <update id="deleteByEmpId" parameterType="map">
        UPDATE employee
        SET
        update_time = NOW(),
        <if test="updateBy != null and updateBy != ''">
            update_by = #{updateBy,jdbcType=INTEGER},
        </if>
        usable = 0
        WHERE emp_id = #{empId,jdbcType=INTEGER}
    </update>
    <select id="selectByEmpId" parameterType="integer" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM employee
        WHERE emp_id = #{empId,jdbcType=INTEGER} usable = 1
    </select>

    <resultMap id="userMap" type="com.tdmh.entity.Employee">
        <id property="empId" column="emp_id"/>
        <result property="empName" column="emp_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="empOrgId" column="emp_org_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result property="empDistrictId" column="emp_district_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result property="empLoginName" column="emp_login_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="empPassword" column="emp_password" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="empEmail" column="emp_email" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="empPhone" column="emp_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="empMobile" column="emp_mobile" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="empAddress" column="emp_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="empType" column="emp_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result property="empManagementDistId" column="emp_management_dist_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="empLoginIp" column="emp_login_ip" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <result property="empLoginDate" column="emp_login_date" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result property="empLoginFlag" column="emp_login_flag" jdbcType="BIT" javaType="java.lang.Boolean"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        <result property="usable" column="usable" jdbcType="BIT" javaType="java.lang.Boolean"/>
        <result property="remarks" column="remarks" jdbcType="VARCHAR" javaType="java.lang.String"/>
        <collection property="roles" ofType="com.tdmh.entity.SysRole">
            <id property="roleId" column="role_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <result property="roleName" column="role_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <collection property="permissions" ofType="com.tdmh.entity.SysPermission">
                <id property="permId" column="perm_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
                <result property="permName" column="perm_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
                <result property="permCaption" column="perm_caption" jdbcType="VARCHAR" javaType="java.lang.String"/>
             </collection>
        </collection>
    </resultMap>
    <select id="getEmpByLoginName" parameterType="string" resultMap="userMap">
        SELECT
        e.emp_id, e.emp_number, e.emp_name, e.emp_org_id, e.emp_district_id, e.emp_login_name, e.emp_password, e.emp_email, e.emp_phone, e.emp_mobile,
        e.emp_address, e.emp_type, e.emp_management_dist_id,e.emp_login_ip, e.emp_login_date, e.emp_login_flag, e.create_time, e.create_by, e.update_time,
        e.update_by, e.usable, e.remarks, r.role_id, r.role_name, p.perm_id, p.perm_name, p.perm_caption
        FROM employee e
        LEFT JOIN employee_role er on er.emp_id = e.emp_id
        LEFT JOIN sys_role r on r.role_id = er.role_id
        LEFT JOIN sys_role_perm rp on rp.role_id = r.role_id
        LEFT JOIN sys_permission p on p.perm_id = rp.perm_id
        WHERE e.emp_login_name = #{empLoginName,jdbcType=VARCHAR}
    </select>
    <resultMap id="EmployeeParam" type="com.tdmh.param.EmployeeParam">
        <constructor>
            <idArg column="emp_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="emp_number" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_org_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="org_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_district_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="dist_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_login_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_password" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_email" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_mobile" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="emp_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_management_dist_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_login_ip" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_login_date" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="emp_login_flag" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="emp_login_flag_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="create_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="usable" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="remarks" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <select id="getAllEmployees" resultMap="EmployeeParam">
        select
        e.emp_id, e.emp_number, e.emp_name, e.emp_org_id, o.org_name, e.emp_district_id, sd.dist_name, e.emp_login_name, e.emp_password, e.emp_email,
        e.emp_phone, e.emp_mobile, e.emp_address, e.emp_type , sd2.dict_key AS emp_type_name, e.emp_management_dist_id,e.emp_login_ip, e.emp_login_date, e
        .emp_login_flag, sd3.dict_key AS emp_login_flag_name, e.create_time, e .create_by, e.update_time, e.update_by, e.usable, e.remarks
        from
        employee e left join sys_district sd on e.emp_district_id = sd.dist_id
        left join sys_organization o on e.emp_org_id = o.org_id
        LEFT JOIN sys_dictionary sd2 on e.emp_type = sd2.dict_value and sd2.dict_category = 'emp_type' and sd2.usable = 1
        LEFT JOIN sys_dictionary sd3 on e.emp_login_flag = sd3.dict_value and sd3.dict_category = 'emp_login_flag' and sd3.usable = 1
        where e.usable = 1
    </select>
    <insert id="addEmployee" parameterType="com.tdmh.param.EmployeeParam">
        insert into employee (emp_number, emp_name,
        emp_org_id, emp_district_id, emp_login_name,
        emp_password, emp_email, emp_phone,
        emp_mobile, emp_address, emp_type,
        emp_management_dist_id, emp_login_ip, emp_login_date,
        emp_login_flag, create_time, create_by,
        update_time, update_by, remarks)
        values (#{empNumber,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR},
        #{empOrgId,jdbcType=INTEGER}, #{empDistrictId,jdbcType=INTEGER}, #{empLoginName,jdbcType=VARCHAR},
        #{empPassword,jdbcType=VARCHAR}, #{empEmail,jdbcType=VARCHAR}, #{empPhone,jdbcType=VARCHAR},
        #{empMobile,jdbcType=VARCHAR}, #{empAddress,jdbcType=VARCHAR}, #{empType,jdbcType=VARCHAR},
        #{empManagementDistId,jdbcType=VARCHAR}, #{empLoginIp,jdbcType=VARCHAR}, #{empLoginDate,jdbcType=TIMESTAMP},
        #{empLoginFlag,jdbcType=BIT}, NOW(), #{createBy,jdbcType=INTEGER},
        NOW(), #{updateBy,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR})
    </insert>
    <update id="editEmployee" parameterType="com.tdmh.entity.Employee">
        update employee
        <set>
            emp_number = #{empNumber,jdbcType=VARCHAR},
            emp_name = #{empName,jdbcType=VARCHAR},
            emp_org_id = #{empOrgId,jdbcType=INTEGER},
            emp_district_id = #{empDistrictId,jdbcType=INTEGER},
            emp_login_name = #{empLoginName,jdbcType=VARCHAR},
            <if test="empPassword != null">
                emp_password = #{empPassword,jdbcType=VARCHAR},
            </if>
            emp_email = #{empEmail,jdbcType=VARCHAR},
            emp_phone = #{empPhone,jdbcType=VARCHAR},
            emp_mobile = #{empMobile,jdbcType=VARCHAR},
            emp_address = #{empAddress,jdbcType=VARCHAR},
            emp_type = #{empType,jdbcType=INTEGER},
            emp_management_dist_id = #{empManagementDistId,jdbcType=VARCHAR},
            emp_login_ip = #{empLoginIp,jdbcType=VARCHAR},
            emp_login_date = #{empLoginDate,jdbcType=TIMESTAMP},
            emp_login_flag = #{empLoginFlag,jdbcType=BIT},
            update_time = NOW(),
            update_by = #{updateBy,jdbcType=INTEGER}
        </set>
        where emp_id = #{empId,jdbcType=INTEGER}
    </update>
    <update id="deleteEmployee" parameterType="list">
        update employee
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.updateBy != null">
                        when emp_id = #{i.empId} then #{i.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.updateTime != null">
                        when emp_id = #{i.empId} then NOW()
                    </if>
                </foreach>
            </trim>
            <trim prefix="usable =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.usable != null">
                        when emp_id =#{i.empId} then 0
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="i" index="index">
            emp_id = #{i.empId}
        </foreach>
    </update>
    <select id="searchEmployee" parameterType="map" resultMap="EmployeeParam">
        select
        e.emp_id, e.emp_number, e.emp_name, e.emp_org_id, o.org_name, e.emp_district_id, sd.dist_name, e.emp_login_name, e.emp_password, e.emp_email,
        e.emp_phone, e.emp_mobile, e.emp_address, e.emp_type , sd2.dict_key AS emp_type_name, e.emp_management_dist_id,e.emp_login_ip, e.emp_login_date, e
        .emp_login_flag, sd3.dict_key AS emp_login_flag_name, e.create_time, e .create_by, e.update_time, e.update_by, e.usable, e.remarks
        from
        employee e left join sys_district sd on e.emp_district_id = sd.dist_id
        left join sys_organization o on e.emp_org_id = o.org_id
        LEFT JOIN sys_dictionary sd2 on e.emp_type = sd2.dict_value and sd2.dict_category = 'emp_type' and sd2.usable = 1
        LEFT JOIN sys_dictionary sd3 on e.emp_login_flag = sd3.dict_value and sd3.dict_category = 'emp_login_flag' and sd3.usable = 1
        where e.usable = 1
        <if test="empNumber != null and empNumber != ''">
            AND emp_number LIKE CONCAT('%', #{empNumber,jdbcType=VARCHAR}, '%')
        </if>
        <if test="empName != null and empName != ''">
            AND emp_name LIKE CONCAT('%', #{empName,jdbcType=VARCHAR}, '%')
        </if>
        <if test="empOrgId != null and empOrgId != ''">
            AND emp_org_id = #{empOrgId,jdbcType=INTEGER}
        </if>
        <if test="empDistrictId != null and empDistrictId != ''">
            AND emp_district_id = #{empDistrictId,jdbcType=INTEGER}
        </if>
        <if test="empLoginName != null and empLoginName != ''">
            AND emp_login_name LIKE CONCAT('%', #{empLoginName,jdbcType=VARCHAR}, '%')
        </if>
        <if test="empPhone != null and empPhone != ''">
            AND emp_phone LIKE CONCAT('%', #{empPhone,jdbcType=VARCHAR}, '%')
        </if>
        <if test="empMobile != null and empMobile != ''">
            AND emp_mobile LIKE CONCAT('%', #{empMobile,jdbcType=VARCHAR}, '%')
        </if>
        <if test="empType != null and empType != ''">
            AND emp_type = #{empType,jdbcType=VARCHAR}
        </if>
    </select>
    <select id="getEmpById" parameterType="integer" resultMap="EmployeeParam">
        select
        e.emp_id, e.emp_number, e.emp_name, e.emp_org_id, o.org_name, e.emp_district_id, sd.dist_name, e.emp_login_name, e.emp_password, e.emp_email,
        e.emp_phone, e.emp_mobile, e.emp_address, e.emp_type , sd2.dict_key AS emp_type_name, e.emp_management_dist_id,e.emp_login_ip, e.emp_login_date, e
        .emp_login_flag, sd3.dict_key AS emp_login_flag_name, e.create_time, e .create_by, e.update_time, e.update_by, e.usable, e.remarks
        from
        employee e left join sys_district sd on e.emp_district_id = sd.dist_id
        left join sys_organization o on e.emp_org_id = o.org_id
        LEFT JOIN sys_dictionary sd2 on e.emp_type = sd2.dict_value and sd2.dict_category = 'emp_type' and sd2.usable = 1
        LEFT JOIN sys_dictionary sd3 on e.emp_login_flag = sd3.dict_value and sd3.dict_category = 'emp_login_flag' and sd3.usable = 1
        where e.usable = 1 and e.emp_id = #{empId,jdbcType=INTEGER}
    </select>
</mapper>