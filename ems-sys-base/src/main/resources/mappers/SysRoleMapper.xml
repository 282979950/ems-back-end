<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdmh.entity.mapper.SysRoleMapper">
    <resultMap id="BaseResultMap" type="com.tdmh.entity.SysRole">
        <constructor>
            <idArg column="role_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="role_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role_dists" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="role_orgs" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="is_admin" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="create_by" jdbcType="BIGINT" javaType="java.lang.Integer"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_by" jdbcType="BIGINT" javaType="java.lang.Integer"/>
            <arg column="usable" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="remarks" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        role_id, role_name, role_dists, role_orgs, is_admin, create_time, create_by, update_time, update_by,
        usable, remarks
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from sys_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from sys_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteDistByRoleId" parameterType="int">
        delete from sys_role_dist
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteOrgByRoleId" parameterType="int">
        delete from sys_role_org
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>
    <delete id="deletePermByRoleId" parameterType="int">
        delete from sys_role_perm
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.tdmh.param.SysRoleParam">
        <selectKey keyProperty="roleId" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>
        insert into sys_role (role_name, is_admin, create_time, create_by, update_time, update_by, remarks)
        values (#{roleName,jdbcType=VARCHAR}, #{isAdmin,jdbcType=BIT}, NOW(), #{createBy,jdbcType=INTEGER},
        NOW(), #{updateBy,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR})
    </insert>
    <insert id="insertDistPerms" parameterType="com.tdmh.param.SysRoleParam">
        INSERT INTO sys_role_dist (role_id, dist_id) VALUES
            <foreach collection="roleDistIds" item="distId" separator="," >
                (#{roleId,jdbcType=INTEGER}, #{distId,jdbcType=INTEGER})
            </foreach>
    </insert>
    <insert id="insertOrgPerms" parameterType="com.tdmh.param.SysRoleParam">
        INSERT INTO sys_role_org (role_id, org_id) VALUES
            <foreach collection="roleOrgIds" item="orgId" separator="," >
                (#{roleId,jdbcType=INTEGER}, #{orgId,jdbcType=INTEGER})
            </foreach>
    </insert>
    <insert id="insertPerms" parameterType="com.tdmh.param.SysRoleParam">
        INSERT INTO sys_role_perm (role_id, perm_id) VALUES
            <foreach collection="rolePermIds" item="permId" separator="," >
                (#{roleId,jdbcType=INTEGER}, #{permId,jdbcType=INTEGER})
            </foreach>
    </insert>
    <insert id="insertSelective" parameterType="com.tdmh.entity.SysRole">
        insert into sys_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleDists != null">
                role_dists,
            </if>
            <if test="roleOrgs != null">
                role_orgs,
            </if>
            <if test="isAdmin != null">
                is_admin,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="usable != null">
                usable,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDists != null">
                #{roleDists,jdbcType=VARCHAR},
            </if>
            <if test="roleOrgs != null">
                #{roleOrgs,jdbcType=VARCHAR},
            </if>
            <if test="isAdmin != null">
                #{isAdmin,jdbcType=BIT},
            </if>
            <if test="createTime != null">
                NOW(),
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                NOW(),
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="usable != null">
                #{usable,jdbcType=BIT},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tdmh.entity.SysRole">
        update sys_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDists != null">
                role_dists = #{roleDists,jdbcType=VARCHAR},
            </if>
            <if test="roleOrgs != null">
                role_orgs = #{roleOrgs,jdbcType=VARCHAR},
            </if>
            <if test="isAdmin != null">
                is_admin = #{isAdmin,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = NOW(),
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="usable != null">
                usable = #{usable,jdbcType=BIT},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tdmh.entity.SysRole">
        update sys_role
        set role_name = #{roleName,jdbcType=VARCHAR},
        role_dists = #{roleDists,jdbcType=VARCHAR},
        role_orgs = #{roleOrgs,jdbcType=VARCHAR},
        is_admin = #{isAdmin,jdbcType=BIT},
        update_time = NOW(),
        update_by = #{updateBy,jdbcType=INTEGER},
        remarks = #{remarks,jdbcType=VARCHAR}
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <select id="checkRoleNameExist" parameterType="string" resultType="boolean">
        SELECT
        COUNT(1)
        FROM
        sys_role
        WHERE usable = 1 AND role_name = #{roleName,jdbcType=VARCHAR}
    </select>
    <select id="getRoleIdByName" parameterType="string" resultType="int">
        SELECT role_id FROM sys_role WHERE role_name = #{roleName,jdbcType=VARCHAR} AND usable = 1
    </select>
    <select id="getRoleByName" parameterType="string" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM
        sys_role
        WHERE usable = 1 AND role_name = #{roleName,jdbcType=VARCHAR}
    </select>
    <resultMap id="RoleResultMap" type="com.tdmh.param.SysRoleParam">
        <id column="role_id" jdbcType="INTEGER" property="roleId" javaType="java.lang.Integer"/>
        <result column="role_name" jdbcType="VARCHAR" property="roleName" javaType="java.lang.String"/>
        <result column="is_admin" property="isAdmin" jdbcType="BIT" javaType="java.lang.Boolean"/>
        <collection property="roleDistIds" ofType="integer" select="getDistIdsByRoleId" column="role_id"/>
        <collection property="roleDistNames" ofType="string" select="getDistNamesByRoleId" column="role_id"/>
        <collection property="roleOrgIds" ofType="integer" select="getOrgIdsByRoleId" column="role_id"/>
        <collection property="roleOrgNames" ofType="string" select="getOrgNamesByRoleId" column="role_id"/>
        <collection property="rolePermIds" ofType="integer" select="getPermIdsByRoleId" column="role_id"/>
        <collection property="rolePermNames" ofType="string" select="getPermNamesByRoleId" column="role_id"/>
    </resultMap>
    <select id="select" resultMap="RoleResultMap" parameterType="string">
        SELECT sr.role_id, sr.role_name, sr.is_admin
        FROM sys_role sr
        WHERE sr.usable = 1
        <if test="roleName != null and roleName != ''">
            AND sr.role_name LIKE CONCAT('%', #{roleName,jdbcType=VARCHAR}, '%')
        </if>
    </select>
    <select id="getDistIdsByRoleId" parameterType="int" resultType="int">
        select dist_id from sys_role_dist where role_id = #{roleId}
    </select>
    <select id="getDistNamesByRoleId" parameterType="int" resultType="string">
        select dist_name
        from
        sys_role_dist srd left join sys_district sd on srd.dist_id = sd.dist_id and sd.usable = 1
        where role_id = #{roleId}
    </select>
    <select id="getOrgIdsByRoleId" parameterType="int" resultType="int">
        select org_id from sys_role_org where role_id = #{roleId}
    </select>
    <select id="getOrgNamesByRoleId" parameterType="int" resultType="string">
        select org_name
        from
        sys_role_org sro left join sys_organization so on sro.org_id = so.org_id and so.usable = 1
        where role_id = #{roleId}
    </select>
    <select id="getPermIdsByRoleId" parameterType="int" resultType="int">
        select perm_id from sys_role_perm where role_id = #{roleId}
    </select>
    <select id="getPermNamesByRoleId" parameterType="int" resultType="string">
        select perm_name
        from
        sys_role_perm srp left join sys_permission sp on srp.perm_id = sp.perm_id and sp.usable= 1
        where role_id = #{roleId}
    </select>
    <select id="getRoleById" resultMap="RoleResultMap" parameterType="int">
        SELECT sr.role_id, sr.role_name, sr.is_admin
        FROM sys_role sr
        WHERE sr.usable = 1 and sr.role_id = #{roleId}
    </select>
    <select id="checkRoleIdExist" resultType="java.lang.Boolean" parameterType="int">
        select
        COUNT(1)
        from sys_role
        where usable = 1 and role_id = #{roleId}
    </select>
    <update id="deleteRoleById" parameterType="map">
        UPDATE sys_role
        SET
        update_time = NOW(),
        update_by = #{updateBy,jdbcType=INTEGER},
        usable = 0
        WHERE role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="deleteBatch" parameterType="list">
        update sys_role
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.updateBy != null">
                        when role_id = #{i.roleId} then #{i.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.updateTime != null">
                        when role_id = #{i.roleId} then NOW()
                    </if>
                </foreach>
            </trim>
            <trim prefix="usable =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.usable != null">
                        when role_id =#{i.roleId} then 0
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="i" index="index">
            role_id = #{i.roleId}
        </foreach>
    </update>
    <update id="update" parameterType="com.tdmh.param.SysRoleParam">
        UPDATE sys_role
        SET
        role_name = #{roleName},
        is_admin = #{isAdmin},
        update_time = NOW(),
        update_by = #{updateBy,jdbcType=INTEGER}
        WHERE role_id = #{roleId,jdbcType=INTEGER}
    </update>
</mapper>