<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdmh.entity.mapper.OrderMapper">
    <select id="searchOrderAndInvoiceList" parameterType="map" resultType="com.tdmh.param.OrderParam">
        SELECT
        uo.order_id AS orderId,
        uo.order_type AS orderType,
        uo.order_status AS orderStatus,
        uo.user_id AS userId,
        u.user_name AS userName,
        u.user_address as userAddress,
        uc.card_id AS iccardId,
        uc.card_cost AS cardCost,
        uc.card_password AS iccardPassword,
        uc.card_identifier AS iccardIdentifier,
        u.service_times AS serviceTimes,
        uo.order_gas AS orderGas,
        uo.order_payment AS orderPayment,
        uo.flow_number AS flowNumber,
        uo.order_detail AS orderDetail,
        uo.coupon_gas AS couponGas,
        uo.coupon_number AS couponNumber,
        e.emp_name AS orderCreateEmpName,
        uo.create_time AS orderCreateTime,
        sd.dict_key AS invoiceStatusName,
        uo.free_gas AS freeGas,
        i.invoice_code AS invoiceCode,
        i.invoice_number AS invoiceNumber,
        e1.emp_name AS invoicePrintEmpName,
        i.invoice_print_time AS invoicePrintTime,
        e2.emp_name AS invoiceCancelEmpName,
        i.invoice_cancel_time AS invoiceCancelTime
        FROM
        user_orders uo
        LEFT JOIN `user` u ON uo.user_id = u.user_id and <![CDATA[ uo.order_status <> 4 ]]> and uo.usable = 1
        LEFT JOIN user_card uc ON u.user_id = uc.user_id AND uc.usable = 1
        LEFT JOIN invoice i ON uo.order_id = i.order_id and i.invoice_status = 3
        LEFT JOIN employee e ON uo.create_by = e.emp_id
        LEFT JOIN sys_dictionary sd ON i.invoice_status = sd.dict_value AND sd.dict_category = 'invoice_status'
        LEFT JOIN employee e1 ON i.invoice_print_emp = e1.emp_id
        LEFT JOIN employee e2 ON i.invoice_cancel_emp = e2.emp_id
        WHERE
        1 = 1
        <if test="userName!=null and userName!=''">
            and u.user_name like CONCAT('%', #{userName}, '%')
        </if>
        <if test="iccardId!=null and iccardId!=''">
            and uc.card_id = #{iccardId}
        </if>
        <if test="iccardIdentifier!=null and iccardIdentifier!=''">
            and uc.card_identifier like CONCAT('%', #{iccardIdentifier}, '%')
        </if>
        <if test="invoiceCode!=null and invoiceCode!=''">
            and i.invoice_code like CONCAT('%', #{invoiceCode}, '%')
        </if>
        <if test="invoiceNumber!=null and invoiceNumber!=''">
            and i.invoice_number like CONCAT('%', #{invoiceNumber}, '%')
        </if>
        <if test="startDate!=null and startDate!=''">
            AND DATE_FORMAT(uo.create_time,'%Y-%m-%d') &gt;= #{startDate}
        </if>
        <if test="endDate!=null and endDate!=''">
            AND DATE_FORMAT(uo.create_time,'%Y-%m-%d') &lt;= #{endDate}
        </if>
        order by uo.create_time DESC
    </select>
    <select id="findOrderById" parameterType="int" resultType="com.tdmh.param.InvoiceParam">
        select u.user_name as userName , uo.order_gas as orderGas, uo.order_payment as orderPayment
        from user_orders uo join user u on uo.user_id = u.user_id
        where uo.order_id = #{orderId}
    </select>
    <update id="updateOrderStatus" parameterType="map">
        update user_orders set order_status = #{orderStatus} where order_id = #{orderId}
    </update>
    <update id="updateOrderStatusByFlowNumber" parameterType="map">
        update user_orders set order_status = #{orderStatus} where flow_number = #{flowNumber}
    </update>
    <select id="hasAuthorityToInvoice" parameterType="map" resultType="int">
         SELECT count(order_id) FROM user_orders
         WHERE order_id = #{orderId} AND create_time = (SELECT create_time
         FROM user_orders WHERE  user_id = #{userId}
         ORDER BY create_time DESC LIMIT 1)
    </select>
    <select id="selectReportBusinessDataQuery" resultType="com.tdmh.param.BusinessReportParam" parameterType="map">
        SELECT
        DATE_FORMAT(uo.create_time, "%Y-%m-%d") as orderDate,
        count(0) as orderTimes,
        sum(uo.order_gas) as orderGas,
        sum(uo.order_payment) as orderPayment
        FROM
        user_orders uo
        LEFT JOIN employee e ON uo.employee_id = e.emp_id
        WHERE
        1 = 1
        <if test="empName!=null and empName!=''">
            AND e.emp_name = #{empName}
        </if>
        <if test="startDate!=null and startDate!=''">
            AND DATE_FORMAT(uo.create_time,'%Y-%m-%d') &gt;= #{startDate}
        </if>
        <if test="endDate!=null and endDate!=''">
            AND DATE_FORMAT(uo.create_time,'%Y-%m-%d') &lt;= #{endDate}
        </if>
        GROUP BY
        orderDate
    </select>
    <select id="checkNewInvoicePrint" resultType="int" parameterType="int">
        SELECT
        count(1)
        from invoice where order_id = #{orderId}
    </select>
    <select id="loadGas" resultType="com.tdmh.param.OrderParam">
        SELECT uo.order_id as orderId, uo.order_type AS orderType, uo.order_status as orderStatus, uo.user_id as userId, u.user_name as userName, uc.card_id as iccardId,uc.card_password as iccardPassword, uc.card_identifier as iccardIdentifier,u.service_times as serviceTimes,
        uo.order_gas as orderGas,uo.order_payment as orderPayment,uo.flow_number as flowNumber,
        e.emp_name as orderCreateEmpName,uo.create_time as orderCreateTime, sd.dict_key as invoiceStatusName,
        i.invoice_code as invoiceCode, i.invoice_number as invoiceNumber,
        e1.emp_name as invoicePrintEmpName, i.invoice_print_time as invoicePrintTime,
        e2.emp_name as invoiceCancelEmpName, i.invoice_cancel_time as invoiceCancelTime
        FROM user_orders uo
        JOIN `user` u ON uo.user_id = u.user_id
        join user_card uc on u.user_id = uc.user_id and uc.usable = 1
        LEFT JOIN ( SELECT a.* FROM invoice a ,(SELECT order_id, max(invoice_print_time) AS invoice_print_time FROM invoice WHERE order_id IS NOT null GROUP BY order_id) b
        WHERE a.order_id = b.order_id AND a.invoice_print_time = b.invoice_print_time
        UNION ALL
        SELECT * FROM invoice WHERE order_id IS NULL
        ) i ON uo.order_id = i.order_id
        left join employee e on uo.create_by = e.emp_id
        left join sys_dictionary sd on i.invoice_status = sd.dict_value and sd.dict_category = 'invoice_status'
        LEFT JOIN employee e1 ON i.invoice_print_emp = e1.emp_id
        left join employee e2 on i.invoice_cancel_emp = e2.emp_id
        where uo.usable = 1 and uo.order_status = 1 and uc.card_id = #{icCardId}
        order by uo.create_time limit 1
    </select>

</mapper>