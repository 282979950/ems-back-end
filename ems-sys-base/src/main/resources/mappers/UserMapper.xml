<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdmh.entity.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.tdmh.entity.User">
        <constructor>
            <idArg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_idcard" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_deed" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_dist_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_gas_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_locked" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="service_times" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="create_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="usable" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="remarks" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
        user_id, user_name, user_phone, user_idcard, user_deed, user_dist_id, user_address,
        user_type, user_gas_type,  user_status, user_locked, service_times,
        create_time, create_by, update_time, update_by, usable, remarks
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER} and usable = 1 and user_status = 3
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from user
        where user_id = #{userId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.tdmh.entity.User">
        insert into user (user_id, user_name, user_phone,
        user_idcard, user_deed, user_dist_id,
        user_address, user_type, user_gas_type,
        user_status, user_locked, service_times, create_time, create_by,
        update_time, update_by, usable,
        remarks)
        values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userPhone,jdbcType=VARCHAR},
        #{userIdcard,jdbcType=VARCHAR}, #{userDeed,jdbcType=VARCHAR}, #{userDistId,jdbcType=INTEGER},
        #{userAddress,jdbcType=VARCHAR}, #{userType,jdbcType=INTEGER}, #{userGasType,jdbcType=INTEGER},
        #{userLocked,jdbcType=BIT}, #{serviceTimes,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=INTEGER},
        #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, #{usable,jdbcType=BIT},
        #{remarks,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.tdmh.entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPhone != null">
                user_phone,
            </if>
            <if test="userIdcard != null">
                user_idcard,
            </if>
            <if test="userDeed != null">
                user_deed,
            </if>
            <if test="userDistId != null">
                user_dist_id,
            </if>
            <if test="userAddress != null">
                user_address,
            </if>
            <if test="userType != null">
                user_type,
            </if>
            <if test="userGasType != null">
                user_gas_type,
            </if>
            <if test="user_status != null">
                user_status,
            </if>
            <if test="userLocked != null">
                user_locked,
            </if>
            <if test="serviceTimes != null">
                service_times,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="usable != null">
                usable,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="userIdcard != null">
                #{userIdcard,jdbcType=VARCHAR},
            </if>
            <if test="userDeed != null">
                #{userDeed,jdbcType=VARCHAR},
            </if>
            <if test="userDistId != null">
                #{userDistId,jdbcType=INTEGER},
            </if>
            <if test="userAddress != null">
                #{userAddress,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                #{userType,jdbcType=INTEGER},
            </if>
            <if test="userGasType != null">
                #{userGasType,jdbcType=INTEGER},
            </if>
            <if test="userLocked != null">
                #{userLocked,jdbcType=BIT},
            </if>
            <if test="serviceTimes != null">
                #{serviceTimes,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="usable != null">
                #{usable,jdbcType=BIT},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.tdmh.entity.User">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="userIdcard != null">
                user_idcard = #{userIdcard,jdbcType=VARCHAR},
            </if>
            <if test="userDeed != null">
                user_deed = #{userDeed,jdbcType=VARCHAR},
            </if>
            <if test="userDistId != null">
                user_dist_id = #{userDistId,jdbcType=INTEGER},
            </if>
            <if test="userAddress != null">
                user_address = #{userAddress,jdbcType=VARCHAR},
            </if>
            <if test="userType != null">
                user_type = #{userType,jdbcType=INTEGER},
            </if>
            <if test="userGasType != null">
                user_gas_type = #{userGasType,jdbcType=INTEGER},
            </if>
            <if test="user_status != null">
                user_status = #{userStatus,jdbcType=INTEGER},
            </if>
            <if test="userLocked != null">
                user_locked = #{userLocked,jdbcType=BIT},
            </if>
            <if test="serviceTimes != null">
                service_times = #{serviceTimes,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=INTEGER},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=INTEGER},
            </if>
            <if test="usable != null">
                usable = #{usable,jdbcType=BIT},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.tdmh.entity.User">
        update user
        set user_name = #{userName,jdbcType=VARCHAR},
        user_phone = #{userPhone,jdbcType=VARCHAR},
        user_idcard = #{userIdcard,jdbcType=VARCHAR},
        user_deed = #{userDeed,jdbcType=VARCHAR},
        user_dist_id = #{userDistId,jdbcType=INTEGER},
        user_address = #{userAddress,jdbcType=VARCHAR},
        user_type = #{userType,jdbcType=INTEGER},
        user_gas_type = #{userGasType,jdbcType=INTEGER},
        user_status = #{userStatus,jdbcType=INTEGER},
        user_locked = #{userLocked,jdbcType=BIT},
        service_times = #{serviceTimes,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        create_by = #{createBy,jdbcType=INTEGER},
        update_time = #{updateTime,jdbcType=TIMESTAMP},
        update_by = #{updateBy,jdbcType=INTEGER},
        usable = #{usable,jdbcType=BIT},
        remarks = #{remarks,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <resultMap id="CreateArchiveParam" type="com.tdmh.param.CreateArchiveParam">
        <constructor>
            <idArg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <idArg column="user_dist_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_dist_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_gas_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_gas_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_status_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_locked" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="meter_category" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="create_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="usable" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="remarks" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <select id="getAllArchives" resultMap="CreateArchiveParam">
        select
        u.user_id, u.user_dist_id, dist.dist_name as user_dist_name, u.user_address, u.user_type, sd.dict_key as user_type_name, u.user_gas_type,
        sd2.dict_key as  user_gas_type_name, u.user_status, sd3.dict_key as user_status_name, u.user_locked, mt.meter_category, u.create_time, u.create_by,
        u.update_time, u.update_by, u.usable, u.remarks
        from user u
        LEFT JOIN user_meters um ON u.user_id=um.user_id and um.usable = 1
        LEFT JOIN meter m ON um.meter_id=m.meter_id and m.usable=1
        LEFT JOIN meter_type mt ON m.meter_type_id=mt.meter_type_id
        left join sys_district dist on u.user_dist_id = dist.dist_id
        LEFT JOIN sys_dictionary sd on u.user_type = sd.dict_value and sd.dict_category = 'user_type' and sd.usable = 1
        LEFT JOIN sys_dictionary sd2 on u.user_gas_type = sd2.dict_value and sd2.dict_category = 'user_gas_type' and sd.usable = 1
        LEFT JOIN sys_dictionary sd3 on u.user_status = sd3.dict_value and sd3.dict_category = 'user_status' and sd.usable = 1
        where u.usable = 1
        order by u.user_id
    </select>
    <insert id="addArchive" parameterType="com.tdmh.param.CreateArchiveParam">
        insert into user (user_dist_id, user_address, user_type,
        user_gas_type, user_locked, create_time, create_by,
        update_time, update_by, remarks)
        values (#{userDistId,jdbcType=INTEGER}, #{userAddress,jdbcType=VARCHAR},
        #{userType,jdbcType=INTEGER}, #{userGasType,jdbcType=INTEGER}, #{userLocked,jdbcType=BIT}, NOW(), #{createBy,jdbcType=INTEGER},
        NOW(), #{updateBy,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR})
    </insert>
    <update id="editArchive">
        update user
        set
        user_dist_id = #{userDistId,jdbcType=INTEGER},
        user_address = #{userAddress,jdbcType=VARCHAR},
        user_type = #{userType,jdbcType=INTEGER},
        user_gas_type = #{userGasType,jdbcType=INTEGER},
        user_status = #{userStatus,jdbcType=INTEGER},
        update_time = NOW(),
        update_by = #{updateBy,jdbcType=INTEGER}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="deleteArchive" parameterType="list">
        update user
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.updateBy != null">
                        when user_id = #{i.userId} then #{i.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.updateTime != null">
                        when user_id = #{i.userId} then NOW()
                    </if>
                </foreach>
            </trim>
            <trim prefix="usable =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.usable != null">
                        when user_id =#{i.userId} then 0
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="i" index="index">
            user_id =#{i.userId}
        </foreach>
    </update>
    <select id="searchArchive" parameterType="map" resultMap="CreateArchiveParam">
        select
        u.user_id, u.user_dist_id, dist.dist_name as user_dist_name, u.user_address, u.user_type, sd.dict_key as user_type_name, u.user_gas_type,
        sd2.dict_key as  user_gas_type_name, u.user_status, sd3.dict_key as user_status_name, u.user_locked, mt.meter_category, u.create_time, u.create_by,
        u.update_time, u.update_by, u.usable, u.remarks
        from user u
        LEFT JOIN user_meters um ON u.user_id=um.user_id and um.usable = 1
        LEFT JOIN meter m ON um.meter_id=m.meter_id and m.usable=1
        LEFT JOIN meter_type mt ON m.meter_type_id=mt.meter_type_id
        left join sys_district dist on u.user_dist_id = dist.dist_id
        LEFT JOIN sys_dictionary sd on u.user_type = sd.dict_value and sd.dict_category = 'user_type' and sd.usable = 1
        LEFT JOIN sys_dictionary sd2 on u.user_gas_type = sd2.dict_value and sd2.dict_category = 'user_gas_type' and sd2.usable = 1
        LEFT JOIN sys_dictionary sd3 on u.user_status = sd3.dict_value and sd3.dict_category = 'user_status' and sd3.usable = 1
        where u.usable = 1
        <if test="userId != null and userId != ''">
            AND u.user_id LIKE CONCAT('%', #{userId,jdbcType=INTEGER}, '%')
        </if>
        <if test="userDistId != null and userDistId != ''">
            AND u.user_dist_id = #{userDistId,jdbcType=INTEGER}
        </if>
        <if test="userAddress != null and userAddress != ''">
            AND u.user_address LIKE CONCAT('%', #{userAddress,jdbcType=INTEGER}, '%')
        </if>
        <if test="userType != null and userType != ''">
            AND u.user_type = #{userType,jdbcType=INTEGER}
        </if>
        <if test="userGasType != null and userGasType != ''">
            AND u.user_gas_type = #{userGasType,jdbcType=INTEGER}
        </if>
        <if test="userStatus != null and userStatus != ''">
            AND u.user_status = #{userStatus,jdbcType=INTEGER}
        </if>
        order by u.user_id
    </select>
    <select id="searchAccountById" resultMap="CreateArchiveParam" parameterType="map">
        select
        u.user_id, u.user_dist_id, dist.dist_name as user_dist_name, u.user_address, u.user_type, sd.dict_key as user_type_name, u.user_gas_type,
        sd2.dict_key as  user_gas_type_name, u.user_status, sd3.dict_key as user_status_name, u.user_locked, mt.meter_category, u.create_time, u.create_by,
        u.update_time, u.update_by, u.usable, u.remarks
        from user u
        LEFT JOIN user_meters um ON u.user_id=um.user_id and um.usable = 1
        LEFT JOIN meter m ON um.meter_id=m.meter_id and m.usable=1
        LEFT JOIN meter_type mt ON m.meter_type_id=mt.meter_type_id
        left join sys_district dist on u.user_dist_id = dist.dist_id
        LEFT JOIN sys_dictionary sd on u.user_type = sd.dict_value and sd.dict_category = 'user_type' and sd.usable = 1
        LEFT JOIN sys_dictionary sd2 on u.user_gas_type = sd2.dict_value and sd2.dict_category = 'user_gas_type' and sd2.usable = 1
        LEFT JOIN sys_dictionary sd3 on u.user_status = sd3.dict_value and sd3.dict_category = 'user_status' and sd3.usable = 1
        where u.usable = 1 and u.user_id = #{userId,jdbcType=INTEGER} and u.user_status = 3
    </select>
    <!--用户挂表-->
    <resultMap id="InstallMeterParam" type="com.tdmh.param.InstallMeterParam">
        <constructor>
            <idArg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <idArg column="user_dist_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_dist_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_status_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="meter_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <select id="getAllInstallMeters" resultMap="InstallMeterParam">
        select
        u.user_id, u.user_dist_id, sd.dist_name as user_dist_name, u.user_address, u.user_status, sd2.dict_key as user_status_name , m.meter_code
        from user u LEFT JOIN user_meters um ON u.user_id = um.user_id and um.usable = 1
        LEFT JOIN meter m ON um.meter_id = m.meter_id
        LEFT JOIN sys_district sd on u.user_dist_id = sd.dist_id
        LEFT JOIN sys_dictionary sd2 on u.user_status = sd2.dict_value and sd2.dict_category = 'user_status' and sd2.usable = 1
        WHERE u.usable = 1 and u.user_status = 1
        ORDER BY u.user_id
    </select>
    <select id="searchInstallMeter" parameterType="map" resultMap="InstallMeterParam">
        select
        u.user_id, u.user_dist_id, sd.dist_name as user_dist_name, u.user_address, u.user_status, sd2.dict_key as user_status_name , m.meter_code
        from user u LEFT JOIN user_meters um ON u.user_id = um.user_id and um.usable = 1
        LEFT JOIN meter m ON um.meter_id = m.meter_id
        LEFT JOIN sys_district sd on u.user_dist_id = sd.dist_id
        LEFT JOIN sys_dictionary sd2 on u.user_status = sd2.dict_value and sd2.dict_category = 'user_status' and sd2.usable = 1
        WHERE u.usable = 1 and u.user_status = 1
        <if test="userId != null and userId != ''">
            AND u.user_id LIKE CONCAT('%', #{userId,jdbcType=INTEGER}, '%')
        </if>
        <if test="userDistId != null and userDistId != ''">
            AND u.user_dist_id = #{userDistId,jdbcType=INTEGER}
        </if>
        <if test="userAddress != null and userAddress != ''">
            AND u.user_address LIKE CONCAT('%', #{userAddress,jdbcType=INTEGER}, '%')
        </if>
        ORDER BY u.user_id
    </select>
    <update id="updateUserStatus" parameterType="list">
        update user
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="update_by = case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.updateBy != null">
                        when user_id = #{i.userId} then #{i.updateBy}
                    </if>
                </foreach>
            </trim>
            <trim prefix="update_time = case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.updateTime != null">
                        when user_id = #{i.userId} then NOW()
                    </if>
                </foreach>
            </trim>
            <trim prefix="user_status =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.userStatus != null">
                        when user_id =#{i.userId} then #{i.userStatus}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="i" index="index">
            user_id =#{i.userId}
        </foreach>
    </update>
    <update id="createAccount" parameterType="com.tdmh.param.CreateAccountParam">
        update user
        set user_name = #{userName,jdbcType=VARCHAR},
        user_phone = #{userPhone,jdbcType=VARCHAR},
        user_idcard = #{userIdcard,jdbcType=VARCHAR},
        user_deed = #{userDeed,jdbcType=VARCHAR},
        user_status = 3,
        user_locked = #{userLocked,jdbcType=BIT},
        service_times = 0,
        open_time = NOW(),
        open_by = #{updateBy,jdbcType=INTEGER},
        update_time = NOW(),
        update_by = #{updateBy,jdbcType=INTEGER},
        usable = #{usable,jdbcType=BIT},
        remarks = #{remarks,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <select id="getAllCount" resultType="java.lang.Integer">
        select count (1) from user
    </select>
    <select id="getUserByIccardId" parameterType="integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where iccard_id = #{iccardId,jdbcType=INTEGER} and usable = 1
    </select>
    <select id="getUserById" parameterType="integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where user_id = #{userId,jdbcType=INTEGER} and usable = 1
    </select>
    <resultMap id="LockAccountParam" type="com.tdmh.param.LockAccountParam">
        <constructor>
            <idArg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="iccard_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="dist_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="is_lock" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="lock_reason" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="last_lock_reason" jdbcType="VARCHAR" javaType="java.lang.String"/>
            </constructor>
    </resultMap>
    <select id="searchAccountArchive" parameterType="map" resultMap="LockAccountParam">
        select
        u.user_id, u.user_name,uc.card_id as iccard_id, dist.dist_name, u.user_address, IFNULL(ul.is_lock,0) as is_lock,'' as lock_reason, ul.lock_reason as last_lock_reason
        from user u
        left join user_card uc on u.user_id = uc.user_id
        left join sys_district dist on u.user_dist_id = dist.dist_id
        LEFT JOIN ( SELECT us.user_id, IFNULL(us.is_lock,0) is_lock, us.lock_reason , us.create_time FROM user_lock us ,
        (SELECT user_id , MAX(create_time) AS create_time FROM user_lock GROUP BY user_id) um
        WHERE us.user_id = um.user_id AND us.create_time = um.create_time
        ) ul ON u.user_id = ul.user_id
        where u.usable = 1 AND uc.usable=1
        <if test="userId != null and userId != ''">
            AND u.user_id  LIKE CONCAT('%',#{userId,jdbcType=VARCHAR}, '%')
        </if>
        <if test="userName != null and userName != ''">
            AND u.user_name  LIKE CONCAT('%',#{userName,jdbcType=VARCHAR}, '%')
        </if>
        <if test="iccardId != null and iccardId != ''">
            AND uc.card_id  LIKE CONCAT('%',#{iccardId,jdbcType=VARCHAR}, '%')
        </if>
        <if test="userStatus != null and userStatus != ''">
            AND u.user_status = #{userStatus,jdbcType=VARCHAR}
        </if>
    </select>
    <insert id="insertUserLock" parameterType="com.tdmh.entity.UserLock">
        insert into user_lock (user_id, is_lock,lock_reason,create_time, create_by,update_time,update_by ,usable, remarks)
       values (#{userId,jdbcType=INTEGER},#{isLock,jdbcType=BIT},#{lockReason,jdbcType=VARCHAR},NOW(),#{createBy,jdbcType=INTEGER},NOW(),
        #{updateBy,jdbcType=INTEGER},#{usable,jdbcType=BIT},#{remarks,jdbcType=VARCHAR})
       </insert>

    <select id="searchLockList" parameterType="int" resultType="com.tdmh.entity.UserLock">
      SELECT user_lock_id as userLockId,user_id as userId,is_lock as isLock,lock_reason as lockReason,create_time as createTime
      FROM user_lock where user_id = #{userId,jdbcType=INTEGER}
    </select>

    <update id="updateServiceTimesByUserId" parameterType="int">
        update user set service_times = service_times +1 where user_id = #{userId}
    </update>

    <select id="getServiceTimesByUserId" parameterType="int" resultType="java.lang.Integer">
        select service_times from user where user_id = #{userId}
    </select>
    <update id="updateFillStatus" parameterType="map">
        update user
        set
        user_fill_gas_status = #{status,jdbcType=BIT}
        where
        user_id = #{userId} and usable = 1
    </update>
    <select id="userChangeList" parameterType="com.tdmh.entity.User" resultType="com.tdmh.entity.User" >
        SELECT
        u.user_id as userId,u.user_name as userName,u.user_phone as userPhone,
        dist.dist_name as distName,u.user_address as userAddress,
        u.user_idcard as userIdcard,u.user_deed as userDeed,
        u.user_type as userType,u.user_gas_type as userGasType,
        sd.dict_key AS userTypeName,
        u.user_gas_type as userGasType,sd2.dict_key AS  userGasTypeName,
        u.user_status as userStatus,sd3.dict_key AS userStatusName
        FROM user u
        LEFT JOIN sys_district dist ON u.user_dist_id = dist.dist_id
        LEFT JOIN sys_dictionary sd ON u.user_type = sd.dict_value AND sd.dict_category = 'user_type' AND sd.usable = 1
        LEFT JOIN sys_dictionary sd2 ON u.user_gas_type = sd2.dict_value AND sd2.dict_category = 'user_gas_type' AND sd2.usable = 1
        LEFT JOIN sys_dictionary sd3 ON u.user_status = sd3.dict_value AND sd3.dict_category = 'user_status' AND sd3.usable = 1

        WHERE u.usable = 1
        <if test="userStatus != null and userStatus != ''">
            AND u.user_status = #{userStatus}
        </if>
        <if test="userName != null and userName != ''">
            AND u.user_name = #{userName}
        </if>
    </select>
    <update id="updateUserById" parameterType="com.tdmh.entity.User">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone,jdbcType=VARCHAR},
            </if>
            <if test="userIdcard != null">
                user_idcard = #{userIdcard,jdbcType=VARCHAR},
            </if>
            <if test="userDeed != null">
                user_deed = #{userDeed,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=INTEGER}
    </update>
    <update id="updateUserUsable" parameterType="int" >
        update user  SET usable=0 where user_id = #{userId,jdbcType=INTEGER}

    </update>
    <!--查询充值类型为	普通订单和超用补缴订单数据-->
    <select id="selectUserByOrderType" resultType="com.tdmh.entity.User" parameterType="com.tdmh.entity.User">
        SELECT
          u.user_id as userId,
          u.user_name as userName,
          u.user_address as userAddress,
          u.user_type as userType,
          u.user_gas_type as userGasType,
          orders.order_id as orderId,

          orders.order_payment as orderPayment,
          orders.order_gas as orderGas,
          orders.employee_id as employeeId,
          orders.order_status as orderStatus,
          orders.create_time as orderCreateTime,
          orders.order_type as orderType,
          orders.account_state as accountState,
          sd.dict_key AS userTypeName ,
         sd2.dict_key AS  userGasTypeName,
         sd3.dict_key AS  orderTypeName,
         sd4.dict_value AS accountStateName
        FROM
           user_orders orders
        LEFT JOIN user u  ON orders.user_id = u.user_id
        LEFT JOIN sys_district dist ON u.user_dist_id = dist.dist_id
        LEFT JOIN sys_dictionary sd ON u.user_type = sd.dict_value AND sd.dict_category = 'user_type' AND sd.usable = 1
        LEFT JOIN sys_dictionary sd2 ON u.user_gas_type = sd2.dict_value AND sd2.dict_category = 'user_gas_type' AND sd2.usable = 1
        LEFT JOIN sys_dictionary sd3 ON orders.order_type = sd3.dict_value AND sd3.dict_category = 'order_type' AND sd3.usable = 1
    LEFT JOIN sys_dictionary sd4 ON orders.account_state = sd4.dict_key AND sd4.dict_category = 'account_state' AND sd4.usable = 1

WHERE orders.order_type IN ( '2','4')
        <if test="userName != null and userName != ''">
         and    user_name = #{userName}
        </if>
        <if test="userTypeName != null and userTypeName != ''">
            AND sd.dict_key = #{userTypeName}
        </if>
        <if test="employeeId != null">
            AND orders.employee_id = #{employeeId}
        </if>
        ORDER BY orderCreateTime DESC
    </select>
    <select id="searchAccountQueryList" parameterType="map" resultType="com.tdmh.param.AccountQueryParam">
        select u.user_id as userId, u.user_name as userName, sd.dist_name as userDistName, u.user_address as userAddress,
        sd1.dict_key AS userTypeName , sd2.dict_key AS  userGasTypeName, e.emp_name as openByName, u.open_time as openTime
        from user u
        left join sys_district sd on u.user_dist_id = sd.dist_id AND sd.usable = 1
        LEFT JOIN sys_dictionary sd1 ON u.user_type = sd1.dict_value AND sd1.dict_category = 'user_type' AND sd1.usable = 1
        LEFT JOIN sys_dictionary sd2 ON u.user_gas_type = sd2.dict_value AND sd2.dict_category = 'user_gas_type' AND sd2.usable = 1
        LEFT JOIN employee e on u.open_by = e.emp_id
        where u.usable = 1
        <if test="startDate!=null and startDate!=''">
            AND u.open_time &gt;= #{startDate}
        </if>
        <if test="endDate!=null and endDate!=''">
            AND u.open_time &lt;= #{endDate}
        </if>
        <if test="distIds!=null and distIds!=''">
            AND u.user_dist_id IN (${distIds})
        </if>
        <if test="userAddress!=null and userAddress!=''">
            AND u.user_address like CONTACT('%',#{userAddress},'%')
        </if>
        ORDER BY u.open_time DESC
    </select>

    <select id="searchAbnormalUserList" parameterType="map" resultType="com.tdmh.param.AbnormalUser">
        SELECT u.user_id AS userId, u.user_name AS userName, uc.card_id AS iccardId, uc.card_identifier AS iccardIdentifier, u.user_phone AS userPhone, sd.dist_name as userDistName,
        u.user_address AS userAddress, uo.totalOrderGas, uo.totalOrderPayment, uo.startBuyDay, uo.endBuyDay, datediff(now(),uo.endBuyDay) AS notBuyDayCount,
        ROUND(totalOrderGas/(TIMESTAMPDIFF(MONTH,uo.startBuyDay,uo.endBuyDay)+1),1) AS monthAveGas, ROUND(totalOrderPayment /(TIMESTAMPDIFF(MONTH,uo.startBuyDay,uo.endBuyDay)+1),2) AS monthAvePayment
        FROM `user` u
        JOIN user_card uc ON u.user_id = uc.user_id AND uc.usable = 1
        LEFT JOIN sys_district sd on u.user_dist_id = sd.dist_id AND sd.usable = 1
        JOIN
        (
        SELECT user_id, SUM(order_gas) AS totalOrderGas, SUM(order_payment) AS totalOrderPayment, MIN(create_time) AS startBuyDay, MAX(create_time) AS endBuyDay FROM user_orders GROUP BY user_id
        ) uo ON u.user_id = uo.user_id
        WHERE u.usable = 1
        <if test="monthAveGas!=null">
            AND  ROUND(totalOrderGas/(TIMESTAMPDIFF(MONTH,uo.startBuyDay,uo.endBuyDay)+1),1) <![CDATA[ <= ]]> #{monthAveGas}
        </if>
        <if test="monthAvePayment!=null">
            AND ROUND(totalOrderPayment /(TIMESTAMPDIFF(MONTH,uo.startBuyDay,uo.endBuyDay)+1),2) <![CDATA[ <= ]]> #{monthAvePayment}
        </if>
        <if test="notBuyDayCount">
            AND datediff(now(),uo.endBuyDay) <![CDATA[ >= ]]> #{notBuyDayCount}
        </if>
        <if test="distIds!=null and distIds!=''">
            AND u.user_dist_id IN (${distIds})
        </if>
        <if test="userAddress!=null and userAddress!=''">
            AND u.user_address like CONTACT('%',#{userAddress},'%')
        </if>
    </select>
</mapper>