<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdmh.entity.mapper.UserOrdersMapper" >
  <resultMap id="BaseResultMap" type="com.tdmh.entity.UserOrders" >
    <constructor >
      <idArg column="order_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="user_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="user_idcard" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="user_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="emp_name" jdbcType="VARCHAR" javaType="java.lang.String"/>

      <arg column="service_times" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="employee_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_payment" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="order_gas" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="order_status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="order_close_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="flow_number" jdbcType="VARCHAR" javaType="java.lang.String"/>
      <arg column="order_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="create_by" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_by" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="usable" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="remarks" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, user_id, employee_id, order_payment, order_gas, order_status, order_create_time, order_close_time, flow_number, order_type,
    create_time, create_by, update_time, update_by, usable, remarks
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user_orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_orders
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tdmh.entity.UserOrders" >
<selectKey keyProperty="orderId" order="AFTER" resultType="int">
    SELECT LAST_INSERT_ID()
</selectKey>
    insert into user_orders (user_id, employee_id,
      order_payment, order_gas, order_status, order_create_time,
      order_close_time,flow_number, order_type, create_time, create_by,
      update_time, update_by, usable,coupon_gas,coupon_number,order_detail,
      remarks)
    values (#{userId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{orderPayment,jdbcType=DECIMAL},
      #{orderGas,jdbcType=DECIMAL}, #{orderStatus,jdbcType=INTEGER}, #{orderCreateTime,jdbcType=TIMESTAMP},
      #{orderCloseTime,jdbcType=TIMESTAMP}, #{flowNumber,jdbcType=VARCHAR}, #{orderType,jdbcType=INTEGER}, NOW(), #{createBy,jdbcType=INTEGER},
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=INTEGER}, #{usable,jdbcType=BIT},#{couponGas},#{couponNumber},#{orderDetail},
      #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tdmh.entity.UserOrders" >
    insert into user_orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="orderPayment != null" >
        order_payment,
      </if>
      <if test="orderGas != null" >
        order_gas,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="orderCreateTime != null" >
        order_create_time,
      </if>
      <if test="orderCloseTime != null" >
        order_close_time,
      </if>
      <if test="flowNumber != null" >
        flow_number,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="usable != null" >
        usable,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="orderPayment != null" >
        #{orderPayment,jdbcType=DECIMAL},
      </if>
      <if test="orderGas != null" >
        #{order_gas,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderCreateTime != null" >
        #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderCloseTime != null" >
        #{orderCloseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowNumber != null" >
        #{flowNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="usable != null" >
        #{usable,jdbcType=BIT},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tdmh.entity.UserOrders" >
    update user_orders
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="orderPayment != null" >
        order_payment = #{orderPayment,jdbcType=DECIMAL},
      </if>
      <if test="orderGas != null" >
        order_gas = #{orderGas,jdbcType=DECIMAL},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderCreateTime != null" >
        order_create_time = #{orderCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderCloseTime != null" >
        order_close_time = #{orderCloseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flowNumber != null" >
        flow_number = #{flowNumber,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=INTEGER},
      </if>
      <if test="usable != null" >
        usable = #{usable,jdbcType=BIT},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tdmh.entity.UserOrders" >
    update user_orders
    set user_id = #{userId,jdbcType=INTEGER},
      employee_id = #{employeeId,jdbcType=INTEGER},
      order_payment = #{orderPayment,jdbcType=DECIMAL},
      order_gas = #{orderGas,jdbcType=DECIMAL},
      order_status = #{orderStatus,jdbcType=INTEGER},
      order_create_time = #{orderCreateTime,jdbcType=TIMESTAMP},
      order_close_time = #{orderCloseTime,jdbcType=TIMESTAMP},
      flow_number = #{flowNumber,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=INTEGER},
      usable = #{usable,jdbcType=BIT},
      remarks = #{remarks,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <insert id="createFirstOrder" parameterType="com.tdmh.entity.UserOrders" >
    insert into user_orders (user_id, employee_id,
      order_payment,order_gas, order_status, order_create_time,
      order_close_time, flow_number,order_type, create_time, create_by,
      update_time, update_by, remarks)
    values (#{userId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER},
      #{orderPayment,jdbcType=DECIMAL},#{orderGas,jdbcType=DECIMAL}, #{orderStatus,jdbcType=INTEGER}, NOW(),
      #{orderCloseTime,jdbcType=TIMESTAMP},#{flowNumber,jdbcType=VARCHAR},#{orderType,jdbcType=INTEGER}, NOW(), #{createBy,jdbcType=INTEGER},
      NOW(), #{updateBy,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <select id="findHasUsedGasInYear" resultType="decimal">
        SELECT SUM(order_gas) FROM user_orders WHERE user_id = #{userId} AND (order_status = 1 or order_status = 2) AND create_time > MAKEDATE(YEAR(NOW()), 1);
  </select>
  <insert id="createChangeUserOrder" parameterType="com.tdmh.entity.UserOrders" >
    insert into user_orders (user_id,employee_id,order_payment,
                 order_gas,order_type,create_time,create_by,
                 update_time,update_by,usable,order_supplement,remarks)
    values (#{userId,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER},#{orderPayment,jdbcType=DECIMAL},#{orderGas,jdbcType=DECIMAL},
             #{orderType},NOW(),#{createBy,jdbcType=INTEGER},NOW(),#{updateBy,jdbcType=INTEGER},#{usable},#{orderSupplement},#{remarks}
      )
  </insert>
  <select id="countUserOrdersByTimeEmployeeId" resultType="java.lang.Integer" parameterType="com.tdmh.entity.UserOrders">
       SELECT   COUNT(order_id)  FROM  user_orders  WHERE order_id = #{orderId}  AND create_time =
        (SELECT  create_time    FROM    user_orders         WHERE employee_id = #{employeeId}   AND
          DATE_FORMAT(create_time,'%Y-%m-%d')= #{resltTime}    ORDER BY create_time DESC     LIMIT 1)
  </select>
  <update id="updateUserOrdersByOrderId" parameterType="com.tdmh.entity.UserOrders">
    UPDATE  user_orders SET account_state=#{accountState}
    <if test="orderStrikeTime!=null">
      ,order_strike_time=#{orderStrikeTime}
    </if>
    <if test="orderStatus !=null and orderStatus!=''">
      ,order_status=#{orderStatus}
    </if>
      WHERE order_id=#{orderId}

  </update>
  <resultMap id="WXOrderParam" type="com.tdmh.param.WXOrderParam">
    <constructor >
      <idArg column="order_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_payment" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="order_gas" jdbcType="DECIMAL" javaType="java.math.BigDecimal" />
      <arg column="order_status" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="order_status_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="order_create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="order_close_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <select id="getAllTimeoutWXOrders" resultType="java.lang.Integer">
    select
    order_id
    from user_orders
    where order_status = 3 and order_type = 5 and usable = 1 and order_close_time &lt; NOW()
  </select>
  <select id="getAllWXOrders" resultMap="WXOrderParam" parameterType="integer">
    select
    order_id, order_payment, order_gas, order_status, dict_key as order_status_name, order_create_time, order_close_time
    from user_orders uo
    left join sys_dictionary sd on sd.dict_category = "order_status" and sd.dict_value = uo.order_status and sd.usable = 1
    where user_id = #{userId} and order_type = 5 and uo.usable = 1
  </select>
  <update id="finishWXOrder">
    update user_orders
    set
    order_status = 1,
    order_close_time = NOW()
    where order_id = #{orderId} and usable = 1
  </update>
  <update id="cancelWxOrder" parameterType="integer">
    update user_orders
    set
    order_status = 4
    where order_id = #{orderId} and usable = 1
  </update>

  <select id="selectBusinessDataQuery" resultType="com.tdmh.entity.UserOrders" parameterType="com.tdmh.entity.UserOrders">
         SELECT
          user_id AS userId,
          SUM(
            CASE WHEN
            user_id IS NOT NULL
            THEN
            1
            ELSE
            0
            END
          )AS icCard,
            MAX(create_time) AS createTime,
            SUM(order_gas) AS orderGas,
            SUM(order_payment) AS orderPayment
        FROM
          user_orders
        WHERE usable = 1
        AND (account_state NOT IN(1,3) OR account_state IS NULL)
       <if test="userId != null" >
          AND user_id = #{userId}
       </if>
        GROUP BY user_id
  </select>
  <select  id ="selectordersListQuery" resultType="com.tdmh.entity.UserOrders" parameterType="java.lang.Integer">
         SELECT
	      orders.user_id AS userId,
          orders. order_payment AS orderPayment,
          orders.order_supplement as orderSupplement,
          orders.order_gas AS orderGas,
          sd2.dict_key AS orderStatusName,
          orders. flow_number AS flowNumber,
          sd1.dict_key AS orderTypeName,
          orders.create_time AS createTime,
          sd3.dict_key AS accountStateName

      FROM
          user_orders orders

          LEFT JOIN sys_dictionary sd1
          ON orders.order_type = sd1.dict_value
          AND sd1.dict_category = 'order_type' AND sd1.usable = 1
	      LEFT JOIN sys_dictionary sd2
          ON orders.order_status = sd2.dict_value
          AND sd2.dict_category = 'order_status' AND sd2.usable = 1
          LEFT JOIN sys_dictionary sd3
          ON orders.account_state = sd3.dict_value
          AND sd3.dict_category = 'account_state' AND sd3.usable = 1

      WHERE orders.usable = 1
      and
      orders.user_id=#{userId}

  </select>
  <select id="getCreateTimeByOrderId" resultType="java.util.Date">
    SELECT create_time as createTime FROM user_orders WHERE order_id = #{orderId} AND usable = 1
  </select>
  <!--查询充值根据户号-->
  <select id="getNowCreateTimeByOrderId" resultType="java.util.Date">
    SELECT MAX(create_time) AS createTime  FROM user_orders WHERE user_id = #{userId} AND order_type IN('2') and (account_state not in('1','3') or account_state is null) AND usable = 1
  </select>
  <select id="queryCurrentDataByDate" resultType="java.lang.Integer">
    SELECT
      COUNT(0)
    FROM
      user_orders
    WHERE usable = 1
      AND order_type IN ('2', '3', '5')
      AND (account_state IS NULL OR  account_state != 3)
      AND DATE_FORMAT(create_time ,'%Y-%m-%d')= #{startDate}
  </select>
</mapper>