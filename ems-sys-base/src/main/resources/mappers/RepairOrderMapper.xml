<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdmh.entity.mapper.RepairOrderMapper">
    <resultMap id="RepairOrderParam" type="com.tdmh.param.RepairOrderParam">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="repair_order_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="repair_order_status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="repair_order_status_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="repair_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="repair_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="gas_equipment_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="gas_equipment_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="old_meter_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="old_meter_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="old_meter_type_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="old_meter_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="old_meter_direction" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="old_meter_direction_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="old_meter_stop_code" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="new_meter_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="new_meter_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="new_meter_type_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="new_meter_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="new_meter_direction" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="new_meter_direction_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="new_meter_stop_code" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="repair_fault_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="repair_fault_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="repair_result_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="repair_result_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="emp_number" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="emp_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="repair_start_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="repair_end_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="new_safety_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="old_safety_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="create_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="usable" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="remarks" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <sql id="Base_Sql">
        select
        ro.id, ro.repair_order_id, ro.repair_order_status, sd7.dict_key as repair_order_status_name, ro.user_id ,u.user_name, u.user_phone, u.user_address,
        ro.repair_type, sd1.dict_key as repair_type_name, ro.gas_equipment_type, sd4.dict_key as gas_equipment_type_name,
        ro.old_meter_id, m2.meter_code as old_meter_code, m2.meter_type_id as old_meter_type_id, mt2.meter_type as old_meter_type_name,
        m2.meter_direction as old_meter_direction, sd6.dict_key as old_meter_direction_name, ro.old_meter_stop_code,
        ro.new_meter_id, m1.meter_code as new_meter_code, m1.meter_type_id as new_meter_type_id, mt1.meter_type as new_meter_type_name,
        m1.meter_direction as new_meter_direction, sd5.dict_key as new_meter_direction_name, ro.new_meter_stop_code,
        ro.repair_fault_type, sd2.dict_key as repair_fault_type_name, ro.repair_result_type, sd3.dict_key as repair_result_type_name,
        ro.emp_id, e.emp_number, e.emp_name,
        ro.repair_start_time,ro.repair_end_time, ro.new_safety_code, ro.old_safety_code,
        ro.create_time, ro.create_by, ro.update_time, ro.update_by, ro.usable, ro.remarks
        from repair_order ro
        left join user u on ro.user_id = u.user_id and u.usable = 1
        left join meter m1 on ro.new_meter_id = m1.meter_id and m1.usable = 1
        left join meter_type mt1 on m1.meter_type_id = mt1.meter_type_id and mt1.usable = 1
        left join sys_dictionary sd5 on m1.meter_direction = sd5.dict_value and sd5.dict_category = 'meter_direction' and sd5.usable = 1
        left join meter m2 on ro.old_meter_id = m2.meter_id
        left join meter_type mt2 on m2.meter_type_id = mt2.meter_type_id and mt2.usable = 1
        left join sys_dictionary sd6 on m2.meter_direction = sd6.dict_value and sd6.dict_category = 'meter_direction' and sd6.usable = 1
        left join sys_dictionary sd1 on ro.repair_type = sd1.dict_value and sd1.dict_category = 'repair_type' and sd1.usable = 1
        left join sys_dictionary sd2 on ro.repair_fault_type = sd2.dict_value and sd2.dict_category = 'repair_fault_type' and sd2.usable = 1
        left join sys_dictionary sd3 on ro.repair_result_type = sd3.dict_value and sd3.dict_category = 'repair_result_type' and sd3.usable = 1
        left join sys_dictionary sd4 on ro.gas_equipment_type = sd4.dict_value and sd4.dict_category = 'gas_equipment_type' and sd4.usable = 1
        left join sys_dictionary sd7 on ro.repair_order_status = sd7.dict_value and sd7.dict_category = 'repair_order_status' and sd7.usable = 1
        left join employee e on ro.emp_id = e.emp_id and e.usable = 1
        where ro.usable = 1
    </sql>
    <select id="listData" resultMap="RepairOrderParam">
        <include refid="Base_Sql"></include>
        order by ro.repair_order_status, ro.id desc
    </select>
    <select id="getRepairOrderById" resultMap="RepairOrderParam" parameterType="int">
        <include refid="Base_Sql"></include>
        and ro.id = #{id}
    </select>
    <select id="checkRepairOrderExists" resultType="java.lang.Boolean" parameterType="string">
        select
        count(1)
        from repair_order
        where repair_order_id = #{repairOrderId} and usable = 1
    </select>
    <insert id="addRepairOrder" parameterType="com.tdmh.param.RepairOrderParam">
        insert into repair_order(
        repair_order_id, repair_order_status, user_id, repair_type, gas_equipment_type, old_meter_id, old_meter_stop_code, new_meter_id, new_meter_stop_code,
        repair_fault_type, repair_result_type, emp_id, repair_start_time, repair_end_time, new_safety_code, old_safety_code,
        create_time, create_by, update_time, update_by, remarks
        ) values (#{repairOrderId}, #{repairOrderStatus}, #{userId}, #{repairType}, #{gasEquipmentType}, #{oldMeterId}, #{oldMeterStopCode}, #{newMeterId},
        #{newMeterStopCode}, #{repairFaultType}, #{repairResultType}, #{empId}, #{repairStartTime}, #{repairEndTime}, #{newSafetyCode}, #{oldSafetyCode},
        NOW(), #{createBy}, NOW(), #{updateBy}, #{remarks})
    </insert>
    <update id="editRepairOrder">
        update repair_order
        set
        repair_order_id = #{repairOrderId},
        repair_type = #{repairType},
        gas_equipment_type = #{gasEquipmentType},
        old_meter_id = #{oldMeterId},
        old_meter_stop_code = #{oldMeterStopCode},
        new_meter_id = #{newMeterId},
        new_meter_stop_code = #{newMeterStopCode},
        repair_fault_type = #{repairFaultType},
        repair_result_type = #{repairResultType},
        emp_id = #{empId},
        repair_start_time = #{repairStartTime},
        repair_end_time = #{repairEndTime},
        new_safety_code = #{newSafetyCode},
        old_safety_code = #{oldSafetyCode},
        update_time = NOW(),
        update_by = #{updateBy}
        where id = #{id}
    </update>
    <update id="cancelRepairOrder">
        update repair_order
        set
        repair_order_status = 5
        where id = #{id}
    </update>
    <update id="lockRepairOrderByUserId" parameterType="int">
        update repair_order
        set
        repair_order_status = 2
        where user_id = #{userId} and repair_order_status = 1 and usable = 1
    </update>
    <update id="updateRepairOrderStatus">
        update repair_order
        set
        repair_order_status = #{status}
        where repair_order_id = #{repairOrderId} and usable = 1
    </update>
    <select id="searchRepairOrder" resultMap="RepairOrderParam" parameterType="map">
        <include refid="Base_Sql"></include>
        <if test="repairOrderId != null and repairOrderId != ''">
            AND ro.repair_order_id LIKE CONCAT('%', #{repairOrderId}, '%')
        </if>
        <if test="userId != null and userId != ''">
            AND ro.user_id LIKE CONCAT('%', #{userId}, '%')
        </if>
        <if test="repairType != null">
            AND ro.repair_type = #{repairType}
        </if>
        <if test="empName != null and empName != ''">
            AND e.emp_name LIKE CONCAT('%', #{empName}, '%')
        </if>
        order by ro.repair_order_status, ro.id desc
    </select>
    <resultMap id="RepairOrderUserParam" type="com.tdmh.param.RepairOrderUserParam">
        <constructor>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="meter_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="meter_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="meter_type_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="meter_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="meter_direction" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="meter_direction_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <select id="getRepairOrderUserById" resultMap="RepairOrderUserParam" parameterType="map">
        select
        u.user_id, u.user_name, u.user_phone, u.user_address, m.meter_id, m.meter_code, m.meter_type_id,
        mt.meter_type as meter_type_name, m.meter_direction, sd.dict_key as meter_direction_name
        from `user` u
        left join user_meters um on u.user_id = um.user_id and um.usable = 1
        left join meter m on um.meter_id = m.meter_id and m.usable = 1
        left join meter_type mt on m.meter_type_id = mt.meter_type_id and mt.usable = 1
        left join sys_dictionary sd on m.meter_direction = sd.dict_value and sd.dict_category = 'meter_direction' and sd.usable = 1
        where u.user_id = #{userId}
    </select>
    <select id="selectRepairOrderByuserQuery" parameterType="java.lang.Integer" resultType="com.tdmh.param.RepairOrderParam">
             SELECT
                  reor.user_id AS userId,
                  reor.repair_order_id AS repairOrderId,
                  sd.dict_key AS repairTypeName,
                  sd2.dict_key AS gasEquipmentTypeName,
                  reor.old_meter_id AS oldMeterId,
                  reor.old_meter_stop_code AS oldMeterStopCode,
                  reor.old_safety_code AS oldSafetyCode,
                  reor.new_meter_id AS newMeterId,
                  reor.new_meter_stop_code AS newMeterStopCode,
                  reor.new_safety_code AS newSafetyCode,
                  sd3.dict_key AS repairFaultTypeName,
                  sd4.dict_key AS repairResultTypeName,
                  reor.create_time AS createTime
            FROM
                 repair_order reor
              LEFT JOIN sys_dictionary sd
                ON reor.repair_type = sd.dict_value
                AND sd.dict_category = 'repair_type'
                AND sd.usable = 1
              LEFT JOIN sys_dictionary sd2
                ON reor.gas_equipment_type = sd2.dict_value
                AND sd2.dict_category = 'gas_equipment_type'
                AND sd2.usable = 1
              LEFT JOIN sys_dictionary sd3
                ON reor.repair_fault_type = sd3.dict_value
                AND sd3.dict_category = 'repair_fault_type'
                AND sd3.usable = 1
              LEFT JOIN sys_dictionary sd4
                ON reor.repair_result_type = sd4.dict_value
                AND sd4.dict_category = 'repair_result_type'
                AND sd4.usable = 1
            WHERE reor.usable = 1
              AND reor.user_id =#{userId}
    </select>
    <select id="countPendingRepairOrder" resultType="int">
        select
        count(1)
        from repair_order
        where user_id = #{userId} and repair_order_status = 1 and usable = 1
    </select>
    <select id="countProcessingRepairOrder" resultType="int">
        select
        count(1)
        from repair_order
        where user_id = #{userId} and repair_order_status = 2 and usable = 1
    </select>
</mapper>