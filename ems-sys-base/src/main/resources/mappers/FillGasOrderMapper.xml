<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tdmh.entity.mapper.FillGasOrderMapper">
    <resultMap id="FillGasOrderParam" type="com.tdmh.param.FillGasOrderParam">
        <constructor>
            <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <idArg column="fill_gas_order_type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="fill_gas_order_type_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="card_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="card_identifier" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_phone" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="user_address" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="repair_order_id" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="gas_count" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="stop_code_count" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="need_fill_gas" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="fill_gas" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="left_gas" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="need_fill_money" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="fill_money" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="left_money" jdbcType="DECIMAL" javaType="java.math.BigDecimal"/>
            <arg column="fill_gas_order_status" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="fill_gas_order_status_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="create_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="update_by" jdbcType="INTEGER" javaType="java.lang.Integer"/>
            <arg column="usable" jdbcType="BIT" javaType="java.lang.Boolean"/>
            <arg column="remarks" jdbcType="VARCHAR" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
    <insert id="createFillGasOrder" parameterType="com.tdmh.param.FillGasOrderParam">
        insert into fill_gas_order(
        user_id, fill_gas_order_type, repair_order_id, gas_count, stop_code_count, need_fill_gas, fill_gas, left_gas, need_fill_money, fill_money, left_money,
        fill_gas_order_status, create_time, create_by, update_time, update_by, remarks
        )
        values(#{userId}, #{fillGasOrderType}, #{repairOrderId}, #{gasCount}, #{stopCodeCount}, #{needFillGas}, #{fillGas}, #{leftGas}, #{needFillMoney},
        #{fillMoney}, #{leftMoney}, #{fillGasOrderStatus}, NOW(), #{createBy}, NOW(), #{updateBy}, #{remarks}
        )
    </insert>
    <update id="editFillGasOrder">
        update fill_gas_order
        set
        fill_gas_order_status = #{fillGasOrderStatus},
        fill_money = #{fillMoney},
        update_time = NOW(),
        <if test="remarks != null and remarks != ''">
            remarks = #{remarks},
        </if>
        update_by = #{updateBy}
        where id = #{id}
    </update>
    <select id="listData" resultMap="FillGasOrderParam">
        SELECT
        fgo.id, fgo.fill_gas_order_type,sd2.dict_key as fill_gas_order_type_name, fgo.user_id, uc.card_id, uc.card_identifier, u.user_name, u.user_phone, u.user_address,
        fgo.repair_order_id,
        fgo.gas_count, fgo.stop_code_count, fgo.need_fill_gas, fgo.fill_gas, fgo.left_gas, fgo.need_fill_money, fgo.fill_money, fgo.left_money,
        fgo.fill_gas_order_status, sd.dict_key as fill_gas_order_status_name,
        fgo.create_time, fgo.create_by, fgo.update_time, fgo.update_by, fgo.usable, fgo.remarks
        from
        fill_gas_order fgo
        LEFT JOIN `user` u on fgo.user_id = u.user_id and u.usable = 1
        LEFT JOIN user_card uc ON u.user_id = uc.user_id AND uc.usable = 1
        LEFT JOIN sys_dictionary sd on fgo.fill_gas_order_status = sd.dict_value and sd.dict_category = 'fill_gas_order_status' and sd.usable = 1
        LEFT JOIN sys_dictionary sd2 on fgo.fill_gas_order_type = sd2.dict_value and sd2.dict_category = 'fill_gas_order_type' and sd2.usable = 1
        where fgo.usable = 1
        order by fgo.fill_gas_order_status, fgo.id desc
    </select>
    <select id="getSumOrderGasByUserId" resultType="java.math.BigDecimal" parameterType="int">
        SELECT
        SUM(order_gas)
        from
        user_orders
        where user_id = #{userId} and usable = 1 and (order_status = 1 or order_status = 2)
    </select>
    <select id="getSumMeterStopCodeByUserId" resultType="java.math.BigDecimal">
        SELECT
        SUM(m.meter_stop_code)
        from
        user_meters um
        LEFT JOIN meter m on um.meter_id = m.meter_id
        where um.user_id = #{userId}
    </select>
    <select id="getFillGasOrderByUserId" resultType="com.tdmh.param.FillGasOrderParam" parameterType="integer">
        SELECT
        fgo.id, fgo.fill_gas_order_type, sd2.dict_key as fill_gas_order_type_name, fgo.user_id, u.user_name, u.user_phone, u.user_address, fgo.repair_order_id,
        fgo.gas_count, fgo.stop_code_count, fgo.need_fill_gas, fgo.fill_gas, fgo.left_gas, fgo.need_fill_money, fgo.fill_money, fgo.left_money,
        fgo.fill_gas_order_status, sd.dict_key as fill_gas_order_status_name,
        fgo.create_time, fgo.create_by, fgo.update_time, fgo.update_by, fgo.usable, fgo.remarks
        from
        fill_gas_order fgo
        LEFT JOIN `user` u on fgo.user_id = u.user_id and u.usable = 1
        LEFT JOIN sys_dictionary sd on fgo.fill_gas_order_status = sd.dict_value and sd.dict_category = 'fill_gas_order_status' and sd.usable = 1
        LEFT JOIN sys_dictionary sd2 on fgo.fill_gas_order_type = sd2.dict_value and sd2.dict_category = 'fill_gas_order_type' and sd2.usable = 1
        where fgo.user_id = #{userId} and fgo.usable = 1
    </select>
    <select id="hasUnfinishedFillGasOrder" resultType="java.lang.Boolean">
        select
        count(1)
        from fill_gas_order
        where user_id = #{userId} and fill_gas_order_status = 0 and usable = 1
    </select>
    <update id="cancelFillGasByUserId" parameterType="integer">
        update fill_gas_order
        set
        fill_gas_order_status = 2,
        update_time = NOW()
        where user_id = #{userId} and fill_gas_order_status = 0 and usable = 1
    </update>
    <select id="hasFillGasOrderResolved" resultType="java.lang.Boolean" parameterType="map">
        select
        count(1)
        from fill_gas_order
        where user_id = #{userId} and repair_order_id = #{repairOrderId} and fill_gas_order_status = 1
    </select>
    <select id="searchFillGasOrder" resultMap="FillGasOrderParam" parameterType="map">
        SELECT
        fgo.id, fgo.fill_gas_order_type,sd2.dict_key as fill_gas_order_type_name, fgo.user_id, uc.card_id, uc.card_identifier, u.user_name, u.user_phone, u.user_address,
        fgo.repair_order_id,
        fgo.gas_count, fgo.stop_code_count, fgo.need_fill_gas, fgo.fill_gas, fgo.left_gas, fgo.need_fill_money, fgo.fill_money, fgo.left_money,
        fgo.fill_gas_order_status, sd.dict_key as fill_gas_order_status_name,
        fgo.create_time, fgo.create_by, fgo.update_time, fgo.update_by, fgo.usable, fgo.remarks
        from
        fill_gas_order fgo
        LEFT JOIN `user` u on fgo.user_id = u.user_id and u.usable = 1
        LEFT JOIN user_card uc ON u.user_id = uc.user_id AND uc.usable = 1
        LEFT JOIN sys_dictionary sd on fgo.fill_gas_order_status = sd.dict_value and sd.dict_category = 'fill_gas_order_status' and sd.usable = 1
        LEFT JOIN sys_dictionary sd2 on fgo.fill_gas_order_type = sd2.dict_value and sd2.dict_category = 'fill_gas_order_type' and sd2.usable = 1
        where fgo.usable = 1
        <if test="repairOrderId != null and repairOrderId != ''">
            AND fgo.repair_order_id LIKE CONCAT('%', #{repairOrderId}, '%')
        </if>
        <if test="userId != null and userId != ''">
            AND fgo.user_id LIKE CONCAT('%', #{userId}, '%')
        </if>
        <if test="fillGasOrderType != null">
            AND fgo.fill_gas_order_type = #{fillGasOrderType}
        </if>
        order by fgo.fill_gas_order_status, fgo.id desc
    </select>
    <select id="selectFillGasOrderQuery" resultType="com.tdmh.param.FillGasOrderParam" parameterType="java.lang.Integer">
    SELECT
         fgs.user_id as userId,
        sd1.dict_key AS fillGasOrderTypeName,

        fgs.gas_count as gasCount,
        fgs.stop_code_count as stopCodeCount,
        fgs.need_fill_gas as needFillGas,
        fgs.fill_gas as fillGas,
        fgs.left_gas as leftGas,
        fgs.need_fill_money as needFillMoney,
        fgs.fill_money as fillMoney,
        fgs.left_money as leftMoney,
        sd2.dict_key AS fillGasOrderStatusName,
        fgs.create_time as createTime

 FROM fill_gas_order fgs
  LEFT JOIN sys_dictionary sd1
          ON fgs.fill_gas_order_type = sd1.dict_value
          AND sd1.dict_category = 'fill_gas_order_type' AND sd1.usable = 1

  LEFT JOIN sys_dictionary sd2
          ON fgs.fill_gas_order_status = sd2.dict_value
          AND sd2.dict_category = 'fill_gas_order_status' AND sd2.usable = 1


     WHERE
          fgs.user_id=#{userId}
      AND fgs.usable=1

    </select>
    <select id="getHistoryMeterStopCodeByUserId" resultType="java.math.BigDecimal">
        SELECT
        SUM(m.meter_stop_code)
        from
        user_meters um
        LEFT JOIN meter m on um.meter_id = m.meter_id and m.usable = 0
        where um.user_id = #{userId}
    </select>
</mapper>